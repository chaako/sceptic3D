C********************************************************************
c Initialize the plot
      subroutine pltinit(wxi,wxa,wyi,wya)
      real wxi,wxa,wyi,wya
      include 'plotcom.h'
      character*12 str1
c      external initiald

c	write(*,*)' Entering pltinit with nframe,pfsw',nframe,pfsw
	if(nframe.eq.0)then
c      First frame only, Initialize the screen.
	 call svga(scrxpix,scrypix,vmode,ncolor)
c Normal to screen-y scaling factor: just scrxpix for square pixels,
c GKS scheme uses scrypix=0, n2sy,yoverx already set so omits this.
	 if(scrypix .gt. 1)then
	    n2sy=float(scrxpix)
	    yoverx=float(scrypix)/n2sy
	 endif
	 if(pfsw .ne. 0)then
c        Initialize buffer and open file on unit 12.
	    pfilno=pfilno+1
	    write(str1(5:7),'(i3.3)')pfilno
	    str1(1:4)='plot'
	    if(pfsw.gt.1)then
	       str1(8:10)='.ps'
	    else
	       str1(8:10)='.hp'
	    endif
	    call inib(12,str1(1:10))
	 endif
	endif

      if(nrows.ne.0.and.ncolumns.ne.0)then
	 call mregion
      endif

      call scalewn(wxi,wxa,wyi,wya,.false.,.false.)
      if(nrows.ne.0)then
c	Multiple Frames Code.
	 call vecn(crsrx,crsry,0)
	 nframe=nframe+1
	 if(nframe.eq.nrows*ncolumns)nframe=0
      endif
      return
      end
C********************************************************************
      blockdata initiald
c Generic parts of initializations.
      include 'plotcom.h'
      data nframe,nrows,ncolumns/0,0,0/
      data naxmin,naxmax,naymin,naymax,naxpt,naypt
     $  / 0.31,0.91,0.1,0.7,0.31,0.1/
      data xticlen,yticlen,xticoff,yticoff,nxlabw,nxlabp,nylabw,nylabp
     $	/ 0.015,0.015,-0.03,-0.02,4,1,4,1 /
      data ticnum/6/
      data  trcxmi,trcxma,trcymi,trcyma,ltlog
     $	 / 0.,0.,1.,1.,.false. /
      data updown/99/
      data pfsw,pfilno/0,0/
      end

C********************************************************************
      subroutine pltend()
c Wait for return, then switch to text mode
      include 'plotcom.h'
c	write (*,*)' PLtend, updown=',updown
c This is to ensure that we really do the following draw to finish 
c possibly unfinished polylines that went outside the window.
      call winset(.false.)
      call vecn(crsrx,crsry,0)
      if(pfsw .ne. 0)then
	 call flushb(12)
      endif
      call txtmode
      updown=99
      if(nrows.ne.0) then
	 call ticset(0.,0.,0.,0.,0,0,0,0)
	 nframe=0
	 ticnum=6
      endif
      return
      end
c*********************************************************************
      subroutine color(li)
c Set line color. li=15 resets. Plotting translates to dashed etc.
      integer li
      include 'plotcom.h'
      integer wid
      character*6 spchr
      ncolor=li
c      write(*,*)' color: updown=',updown
c The following causes repetitive color changes to be ignored. Obviously bad.
c      if(pfsw.ne.0.and.updown.ne.99) then
      if(pfsw.ne.0) then
	 updown=99
	 if(pfsw.eq.2.or.pfsw.eq.3) call abufwrt(' ST',3,12)
	 if(li.lt.15 )then
	    spchr(1:3)=' SP'
c	    call abufwrt(' SP',3,12)
	    if(pfsw.eq.2 .or. pfsw.eq.3) then
	       call iwrite(mod(li,16)+1,wid,spchr(4:6))
	    else
	       call iwrite(mod(li,8)+1,wid,spchr(4:6))
c	       call ibufwrt(mod(li,8)+1,12)
	    endif
	    call abufwrt(spchr(1:3+wid)//' ',4+wid,12)
	 else
	    call abufwrt(' SP1 ',5,12)
	 endif
      endif
      call scolor(li)
      return
      end
C********************************************************************
      subroutine multiframe(irows,icolumns,itype)
c Set multiple frame parameters.
      integer irows,icolumns,itype
      include 'plotcom.h'
      nframe=0
      nrows=irows
      ncolumns=icolumns
      multype=itype
      if(nrows.eq.0) then
	nrows=1
	ncolumns=1
	call mregion
 	call axregion(0.31,0.91,0.1,0.7)
	nrows=0
      endif
      end
c*********************************************************************
      subroutine mregion
c	Multiple Frames Code.
      real csl,xsp,ysp,ytop
      include 'plotcom.h'
      csl=1./sqrt(sqrt(float(nrows*ncolumns)))
C	Gaps for x and y are denoted by bit 0 and 1 of multype.
      ysp=multype/2
      xsp=multype-ysp*2
      ytop=yoverx*0.95
c Adjust the labeling
      call charsize(0.015*csl,0.015*csl)
      call ticset(.015*csl,0.15*csl,-.03*csl,-.02*csl,0,0,0,0)
      ticnum=7-min(3,2*max(nrows-1,ncolumns-1))
      call axregion(0.1+(nframe/nrows)*(0.88/ncolumns),
     $	  0.1+(nframe/nrows +(1.-0.2*xsp))*(0.88/ncolumns),
     $	  ytop*(0.1+0.9*(nrows-nframe+(nframe/nrows)*nrows-1)/nrows),
     $	  ytop*(0.1+0.9*(nrows-nframe+(nframe/nrows)*nrows-0.2*ysp)
     $	  /nrows)     )
      end
c****************************************************************************
      subroutine setframe(i)
      integer i
      include 'plotcom.h'
      nframe=i
      call mregion
      end
c******************************************************************
      subroutine fitinit(xmin,xmax,ymin,ymax)
      real xmin,xmax,ymin,ymax
      include 'plotcom.h'
      real xfac,xdelta,fxmin,fymin,fxmax,fymax
      integer nxfac
      call fitrange(xmin,xmax,ticnum,nxfac,xfac,xdelta,fxmin,fxmax)
      call fitrange(ymin,ymax,ticnum,nxfac,xfac,xdelta,fymin,fymax)
      call pltinit(fxmin,fxmax,fymin,fymax)
      end
c******************************************************************
C********************************************************************
c Initialize and set region to retain aspect ratio.
      subroutine pltinaspect(wxi,wxa,wyi,wya)
      real wxi,wxa,wyi,wya
      include 'plotcom.h'
      real xna,xni,yna,yni
      data xna/0.91/yni/0.1/

      call pltinit(wxi,wxa,wyi,wya)
c After the pltinit call the common yoverx
c     defines the aspect ratio of the drawing surface.
      ywoxw=(wya-wyi)/(wxa-wxi)
      if(ywoxw .ge. yoverx)then
c frame narrower than drawing.
         yna=yoverx*0.9
         xni=xna-(yna-yni)/ywoxw
      else
c frame wider than drawing.
         xni=0.15
         yna=yni+(xna-xni)*ywoxw
      endif
      call axregion(xni,xna,yni,yna)
      call scalewn(wxi,wxa,wyi,wya,.false.,.false.)
      end

